name: build

on:
  push:
    tags:
      - '*'

env:
  BINARY_NAME: reddit-dl

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.vars.outputs.VERSION }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Set version
      id: vars
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        sed -i "s/<version>/$VERSION/g" main.go
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

    - name: Creating the ChangeLog
      id: changelog
      run: |
        mkdir -p builds
        echo "Changes in this release:" > builds/changelog.md
        git log $(git describe --tags --abbrev=0 \
          $(git describe --tags --abbrev=0)^)^..$(git describe --tags --abbrev=0) \
          --pretty=format:"- %s" >> builds/changelog.md

    - name: Build Linux binaries
      run: |
        GOOS=linux GOARCH=amd64 go build -o builds/${{ env.BINARY_NAME }}
        zip -j -9 builds/${{ env.BINARY_NAME }}_linux_amd64.zip builds/${{ env.BINARY_NAME }}
        
        GOOS=linux GOARCH=arm64 go build -o builds/${{ env.BINARY_NAME }}
        zip -j -9 builds/${{ env.BINARY_NAME }}_linux_arm64.zip builds/${{ env.BINARY_NAME }}
        
        GOOS=linux GOARCH=arm go build -o builds/${{ env.BINARY_NAME }}
        zip -j -9 builds/${{ env.BINARY_NAME }}_linux_arm.zip builds/${{ env.BINARY_NAME }}

    - name: Build macOS binaries
      run: |
        GOOS=darwin GOARCH=amd64 go build -o builds/${{ env.BINARY_NAME }}
        zip -j -9 builds/${{ env.BINARY_NAME }}_macos_amd64.zip builds/${{ env.BINARY_NAME }}
        
        GOOS=darwin GOARCH=arm64 go build -o builds/${{ env.BINARY_NAME }}
        zip -j -9 builds/${{ env.BINARY_NAME }}_macos_arm64.zip builds/${{ env.BINARY_NAME }}

    - name: Build Windows binaries
      run: |
        GOOS=windows GOARCH=amd64 go build -o builds/${{ env.BINARY_NAME }}.exe
        zip -j -9 builds/${{ env.BINARY_NAME }}_windows_amd64.zip builds/${{ env.BINARY_NAME }}.exe
        
        GOOS=windows GOARCH=386 go build -o builds/${{ env.BINARY_NAME }}.exe
        zip -j -9 builds/${{ env.BINARY_NAME }}_windows_386.zip builds/${{ env.BINARY_NAME }}.exe

    - name: Remove temporary files
      run: |
        rm -rf builds/${{ env.BINARY_NAME }} builds/${{ env.BINARY_NAME }}.exe

    - name: Save artifacts
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: ./builds/

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Fetch artifact
        uses: actions/download-artifact@v3
        with:
          name: binaries

      - uses: ncipollo/release-action@v1
        with:
          name: ${{ needs.build.outputs.VERSION }}
          tag: ${{ needs.build.outputs.VERSION }}
          bodyFile: changelog.md
          replacesArtifacts: true
          artifacts: "*.zip"